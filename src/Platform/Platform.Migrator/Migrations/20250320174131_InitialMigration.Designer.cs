// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Platform.Infrastructure.Persistence;

#nullable disable

namespace Platform.Migrator.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20250320174131_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identities")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Platform.Domain.Models.Identities.Identity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EmailConfirmationTokenHash")
                        .HasColumnType("text")
                        .HasColumnName("email_confirmation_token_hash");

                    b.Property<DateTimeOffset?>("EmailConfirmationTokenValidTo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("email_confirmation_token_valid_to");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordResetTokenHash")
                        .HasColumnType("text")
                        .HasColumnName("password_reset_token_hash");

                    b.Property<DateTimeOffset?>("PasswordResetTokenValidTo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("password_reset_token_valid_to");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_identities");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_identities_email");

                    b.HasIndex("EmailConfirmationTokenHash")
                        .HasDatabaseName("ix_identities_email_confirmation_token_hash");

                    b.HasIndex("PasswordResetTokenHash")
                        .HasDatabaseName("ix_identities_password_reset_token_hash");

                    b.ToTable("identities", "identities");
                });
#pragma warning restore 612, 618
        }
    }
}
